---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ item.name }}
  namespace: {{ item.namespace | default(namespace) }}
spec:
  serviceName: jenkins
  replicas: 1
  selector:
    matchLabels:
      name: {{ item.name }}
  template:
    metadata:
      labels:
        name: {{ item.name }}
    spec:
      containers:
        - name: {{ item.name }}
          image: {{ item.image | default(image) }}
          imagePullPolicy: Always
          ports:
            - name: jenkins
              containerPort: 8080
            - name: metrics
              containerPort: 60030
          env:
            - name: TZ
              value: Asia/Shanghai
          resources:
            requests:
              cpu: {{ item.requests_cpu | default("100m") }}
              memory: {{ item.requests_memory | default("1024Mi") }}
            limits:
              cpu: {{ item.limits_cpu | default("4000m") }}
              memory: {{ item.limits_memory | default("8192Mi") }}
          # 健康检查改为tcp，因为jenkins配置了用户名和密码，返回状态为403，而当前httpGet只支持2xx/3xx。
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 60
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: jenkins-data
              mountPath: /data
            # `docker run docker`配置。
            - name: docker-socket
              mountPath: /var/run/docker.sock
              readOnly: true
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
  volumeClaimTemplates:
    - metadata:
        name: jenkins-data
        annotations:
          volume.beta.kubernetes.io/storage-class: {{ item.storageclass | default(storageclass) }}
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ item.storageclass_capacity | default(storageclass_capacity) }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ item.name }}
  namespace: {{ item.namespace | default(namespace) }}
spec:
  type: ClusterIP
  ports:
    - name: jenkins
      port: 8080
      targetPort: 8080
    - name: metrics
      port: 60030
      targetPort: 60030
  selector:
    name: {{ item.name }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ item.name }}-nodeport
  namespace: {{ item.namespace | default(namespace) }}
spec:
  type: NodePort
  ports:
    - name: jenkins
      port: 8080
      targetPort: 8080
    - name: metrics
      port: 60030
      targetPort: 60030
  selector:
    name: {{ item.name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ item.name }}
  namespace: {{ item.namespace | default(namespace) }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
  labels:
    name: {{ item.name }}
spec:
  rules:
    {% for host in item.ingress_hosts -%}
    - host: {{ host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jenkins
                port:
                  number: 8080
          - path: /metrics
            pathType: Exact
            backend:
              service:
                name: metrics
                port:
                  number: 60030
    {% endfor %}

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ item.name }}
  namespace: {{ item.namespace | default(namespace) }}
  labels:
    name: {{ item.name }}
spec:
  endpoints:
    - path: /metrics
      port: metrics
  selector:
    matchLabels:
      name: {{ item.name }}